/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@contract-name: 'contract';
@contract-x: 83px;
@contract-y: 0px;
@contract-offset-x: -83px;
@contract-offset-y: 0px;
@contract-width: 39px;
@contract-height: 37px;
@contract-total-width: 122px;
@contract-total-height: 78px;
@contract-image: 'index-sprite.png';
@contract: 83px 0px -83px 0px 39px 37px 122px 78px 'index-sprite.png' 'contract';
@develop-name: 'develop';
@develop-x: 38px;
@develop-y: 0px;
@develop-offset-x: -38px;
@develop-offset-y: 0px;
@develop-width: 45px;
@develop-height: 37px;
@develop-total-width: 122px;
@develop-total-height: 78px;
@develop-image: 'index-sprite.png';
@develop: 38px 0px -38px 0px 45px 37px 122px 78px 'index-sprite.png' 'develop';
@meet-name: 'meet';
@meet-x: 0px;
@meet-y: 44px;
@meet-offset-x: 0px;
@meet-offset-y: -44px;
@meet-width: 46px;
@meet-height: 34px;
@meet-total-width: 122px;
@meet-total-height: 78px;
@meet-image: 'index-sprite.png';
@meet: 0px 44px 0px -44px 46px 34px 122px 78px 'index-sprite.png' 'meet';
@product-name: 'product';
@product-x: 0px;
@product-y: 0px;
@product-offset-x: 0px;
@product-offset-y: 0px;
@product-width: 38px;
@product-height: 44px;
@product-total-width: 122px;
@product-total-height: 78px;
@product-image: 'index-sprite.png';
@product: 0px 0px 0px 0px 38px 44px 122px 78px 'index-sprite.png' 'product';
@repeat-name: 'repeat';
@repeat-x: 46px;
@repeat-y: 44px;
@repeat-offset-x: -46px;
@repeat-offset-y: -44px;
@repeat-width: 36px;
@repeat-height: 32px;
@repeat-total-width: 122px;
@repeat-total-height: 78px;
@repeat-image: 'index-sprite.png';
@repeat: 46px 44px -46px -44px 36px 32px 122px 78px 'index-sprite.png' 'repeat';
@wedding-name: 'wedding';
@wedding-x: 83px;
@wedding-y: 37px;
@wedding-offset-x: -83px;
@wedding-offset-y: -37px;
@wedding-width: 35px;
@wedding-height: 37px;
@wedding-total-width: 122px;
@wedding-total-height: 78px;
@wedding-image: 'index-sprite.png';
@wedding: 83px 37px -83px -37px 35px 37px 122px 78px 'index-sprite.png' 'wedding';
@spritesheet-width: 122px;
@spritesheet-height: 78px;
@spritesheet-image: 'index-sprite.png';
@spritesheet-sprites: @contract @develop @meet @product @repeat @wedding;
@spritesheet: 122px 78px 'index-sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
